# =========================================================================
# A comprehensive .gitignore for JavaScript/Node.js projects
#
# Sections:
# 1. Dependencies & Package Managers
# 2. Build & Production Output
# 3. Logs
# 4. Environment Variables
# 5. Testing & Coverage
# 6. IDE & Editor-Specific Files
# 7. OS-generated Files
# =========================================================================


# 1. Dependencies & Package Managers
# -------------------------------------------------------------------------
# The node_modules folder contains all downloaded packages and can be huge.
# It should always be ignored and regenerated by running 'npm install' or 'yarn install'.
node_modules/

# Yarn Plug'n'Play
.pnp/
.pnp.js
.pnp.cjs

# JSPM packages
jspm_packages/

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz


# 2. Build & Production Output
# -------------------------------------------------------------------------
# These folders contain bundled, transpiled, or built versions of your code.
# They are generated from your source code and should not be in version control.
dist/
build/
out/
public/

# Framework-specific build output
.next/           # Next.js
.nuxt/           # Nuxt.js
.svelte-kit/     # SvelteKit
.docusaurus/     # Docusaurus

# Other cache or temporary build folders
.cache/          # Gatsby, Parcel, etc.
.tmp/

# TypeScript build info file
*.tsbuildinfo


# 3. Logs
# -------------------------------------------------------------------------
# Log files from various tools.
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*


# 4. Environment Variables
# -------------------------------------------------------------------------
# Ignore environment files that contain secrets like API keys, database passwords, etc.
# IMPORTANT: A template file like '.env.example' SHOULD be committed to the repository.
.env
.env.local
.env.*.local
.env.development
.env.production
# You might want to keep .env.production and .env.development if they contain
# non-sensitive, build-specific variables. Adjust to your project's needs.


# 5. Testing & Coverage
# -------------------------------------------------------------------------
# Reports and artifacts generated by running tests.
coverage/
.nyc_output/
junit.xml


# 6. IDE & Editor-Specific Files
# -------------------------------------------------------------------------
# These files are specific to a user's local development environment.
.idea/           # JetBrains IDEs (WebStorm, IntelliJ)
.vscode/         # Visual Studio Code (You can un-ignore .vscode/settings.json if your team shares settings)
*.sublime-project
*.sublime-workspace


# 7. OS-generated Files
# -------------------------------------------------------------------------
# Miscellaneous files generated by operating systems.
.DS_Store         # macOS
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db       # Windows
Thumbs.db         # Windows


hitesh.html